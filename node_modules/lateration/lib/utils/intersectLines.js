"use strict";

var _interopRequireDefault = require("babel-runtime/helpers/interop-require-default")["default"];

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = intersectLines;

var _invariant = require("invariant");

var _invariant2 = _interopRequireDefault(_invariant);

var _line = require("../line");

var _line2 = _interopRequireDefault(_line);

var _vector = require("../vector");

var _vector2 = _interopRequireDefault(_vector);

var _isNumber = require("./isNumber");

var _isNumber2 = _interopRequireDefault(_isNumber);

function intersectLines(a, b) {
  (0, _invariant2["default"])(a instanceof _line2["default"], "Expected `a` to be a Line instance.");
  (0, _invariant2["default"])(b instanceof _line2["default"], "Expected `b` to be a Line instance.");

  if (a.slope === b.slope) {
    return null;
  }

  // Is `a` vertical and `b` valid?
  if (!(0, _isNumber2["default"])(a.slope) && !(0, _isNumber2["default"])(a.intercept) && (0, _isNumber2["default"])(b.slope) && (0, _isNumber2["default"])(b.intercept)) {
    return new _vector2["default"](0, b.solve(0));
  }

  // Is `b` vertical and `a` valid?
  if (!(0, _isNumber2["default"])(b.slope) && !(0, _isNumber2["default"])(b.intercept) && (0, _isNumber2["default"])(a.slope) && (0, _isNumber2["default"])(a.intercept)) {
    return new _vector2["default"](0, a.solve(0));
  }

  // Are `a` or `b` invalid?
  if (!(0, _isNumber2["default"])(a.slope) || !(0, _isNumber2["default"])(a.intercept) || !(0, _isNumber2["default"])(b.slope) || !(0, _isNumber2["default"])(b.intercept)) {
    return null;
  }

  // Are `a` and `b` parallel to each other?
  if (a.intercept === b.intercept) {
    return new _vector2["default"](0, a.intercept);
  }

  var x = (b.intercept - a.intercept) / (a.slope - b.slope);
  var y = a.solve(x);

  // Is the result not NaN (division by zero)
  if (!(0, _isNumber2["default"])(x) || !(0, _isNumber2["default"])(y)) {
    return null;
  }

  return new _vector2["default"](x, y);
}

module.exports = exports["default"];